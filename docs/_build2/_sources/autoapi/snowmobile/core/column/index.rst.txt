:mod:`snowmobile.core.column`
=============================

.. py:module:: snowmobile.core.column

.. autoapi-nested-parse::

   :class:`Column` object.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   snowmobile.core.column.Column



.. py:class:: Column(original: str, current: Optional[str] = None, prior: Optional[str] = None, src: Optional[str] = None)

   Bases: :class:`snowmobile.core.Snowmobile`

   Handles transformation operations of a single column within a DataFrame.

   .. method:: update(self)

      Simple context manager for dealing with current/prior migration.


   .. method:: lower(self) -> str

      Lower case column.


   .. method:: upper(self) -> str

      Upper case column.


   .. method:: dedupe(current: str, char: Optional[str] = None) -> str
      :staticmethod:

      Dedupes consecutive characters within a string.

      .. note::

         *   Must iterate through matches and perform replacements in the
             order of the **largest to the smallest by number of characters**;
             this is to avoid altering the matches found before replacing them.

      :param current: String containing characters to dedupe.
      :type current: str
      :param char: Character to dedupe.
      :type char: str


   .. method:: reformat(self, fill_char: Optional[str] = None, dedupe_special: bool = True) -> str

      Reformat column for a load to the database.

      :param fill_char: Character to replace special characters and whitespace with;
                        defaults to `_`.
      :type fill_char: str
      :param dedupe_special: Dedupe consecutive special characters; defaults to `True`.
      :type dedupe_special: bool



